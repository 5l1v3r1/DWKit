@using Admin.DAL
@using OptimaJet.Common
@using OptimaJet.Localization

@{
    string localization = "en";
    var user = OptimaJet.Security.Providers.SecurityCache.CurrentUser;
    if (user != null)
    {
        localization = OptimaJet.Security.Providers.SecurityCache.CurrentUser.Localization;
    }
}

<style>
    #loading-mask {
        background-color: white;
        height: 100%;
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
        z-index: 20000;
    }

    #loading {
        height: auto;
        left: 45%;
        padding: 2px;
        position: absolute;
        top: 40%;
        z-index: 20001;
    }

    #loading a { color: #225588; }

    #loading .loading-indicator {
        background: white;
        color: #444;
        font: bold 13px Helvetica, Arial, sans-serif;
        height: auto;
        margin: 0;
        padding: 10px;
    }

    #loading-msg {
        font-size: 10px;
        font-weight: normal;
    }
</style>
<div id="loading-mask" style=""></div>
<div id="loading">
    <div class="loading-indicator">
        <img src="@Url.Content("~/Images/loading.gif")" width="32" height="32" style="float: left; margin-right: 8px; vertical-align: top;"/>@Admin.DAL.Settings.ApplicationName - <a href="http://www.OptimaJet.com">OptimaJet.com</a>
        <br /><span id="loading-msg">@LocalizationProvider.Provider.Get("Loading styles and pictures")...</span>
    </div>
</div>

<script type="text/javascript"> document.getElementById('loading-msg').innerHTML = optimajet.localization.get("Load Core API") + '...'; </script>
@System.Web.Optimization.Scripts.Render("~/Scripts/ExtJS/include-ext?theme=neptune&local=" + localization)

<script type="text/javascript"> document.getElementById('loading-msg').innerHTML = optimajet.localization.get('Loading interface component') + '...'; </script>

<script type="text/javascript"> document.getElementById('loading-msg').innerHTML = optimajet.localization.get("Initialization") + '...'; </script>

<script>
    document.getElementById('loading-msg').innerHTML = optimajet.localization.get('Load Extensions') + '...';
    Ext.Loader.setConfig({enabled: true});
    Ext.Loader.setPath('Ext.ux', '@Url.Content("~/Scripts/ExtJS/ux")');
    Ext.Loader.setPath('Ext.ux.optimajet', '@Url.Content("~/Scripts/ExtJS/ux/optimajet")');
    Ext.Loader.setPath('Ext.state.optimajet', '@Url.Content("~/Scripts/ExtJS/state/optimajet")');
    Ext.require([
        'Ext.grid.*',
        'Ext.data.*',
        'Ext.util.*',
        'Ext.state.*',
        'Ext.form.*',
        'Ext.ux.optimajet.DictionaryField',
        'Ext.ux.optimajet.ReadonlyCheckColumn',
        'Ext.ux.optimajet.FileUpload',
        'Ext.ux.optimajet.FileUploadForm',
        'Ext.ux.optimajet.Month',
        'Ext.ux.CheckColumn',
        'Ext.ux.grid.FiltersFeature',
        'Ext.ux.optimajet.DictionaryPredefinedField',
        'Ext.ux.optimajet.NumberFieldEx',
        'Ext.ux.optimajet.NumberEx',
        'Ext.ux.optimajet.NumberPercentEx',
        'Ext.ux.optimajet.NumberPercentFieldEx',
        'Ext.state.optimajet.ServerProvider'
    ]);
    
    Ext.get('loading').remove();
    Ext.fly('loading-mask').animate({
        opacity: 0,
        remove: true
    });

    optimajet.IsHistoryEnabled = true;

    Ext.onReady(function () {
        Ext.override(Ext.grid.View, { enableTextSelection: true });
        Ext.override(Ext.tree.Panel, { enableTextSelection: true });

        optimajet.PopupDefaultHeight = @Settings.Current["PopupView.Height"];
        optimajet.PopupDefaultWidth = @Settings.Current["PopupView.Width"];

        Ext.ComponentManager.register = function (item) {
            var all = this.all,
            key = all.getKey(item);

            if (all.containsKey(key)) {
                var old = all.get(key);
                if (old.destroy != undefined)
                   old.destroy();
            }

            if (!optimajet.IgnoreFormToken && item.autoGenId != undefined && !item.autoGenId && item.ownerCt == undefined) {
                item.ownerformtoken = optimajet.CurrentFormToken();
            }

            this.all.add(item);
        };
        var stateProvider = Ext.create('Ext.state.optimajet.ServerProvider');
        stateProvider.ExcludeParams.push('B');
        stateProvider.ExcludeParams.push('BV');
        stateProvider.ExcludeParams.push('extra');
        stateProvider.ExcludeParams.push('id');
        Ext.state.Manager.setProvider(stateProvider);
        Ext.History.init();
        Ext.History.on('change', function (token) {
            optimajet.HistoryChangeLocation(token);

            var stateProvider = Ext.state.Manager.getProvider();
            if (stateProvider.HistoryChangeLocation != undefined) {
                stateProvider.HistoryChangeLocation();
            }
        });

        $.ajaxSetup({
            error: function (xhr, status, error) {
                optimajet.showError(optimajet.localization.get('Failed to query the server') + status, error);
                optimajet.GlobalMask.hide();
            },
            cache: false
        });
    });
</script>