@using System.Web.UI.WebControls
@using DevExpress.Data
@using Admin.Controllers
@using Admin.Helpers
@model Guid

@{
    GridViewExtension grid = Html.DevExpress().GridView(
        settings =>
            {
                CurrentSettings.LoadRelatedGridViewSettings(settings);
                settings.CallbackRouteValues = new {Controller = "SecurityUser", Action = "CredentialPartial", ObjectId = Model};
                settings.SettingsEditing.AddNewRowRouteValues = new {Controller = "SecurityUser", Action = "CredentialAddNewPartial", objectId = Model};
                settings.SettingsEditing.UpdateRowRouteValues = new {Controller = "SecurityUser", Action = "CredentialUpdatePartial", objectId = Model};
                settings.SettingsEditing.DeleteRowRouteValues = new {Controller = "SecurityUser", Action = "CredentialDeletePartial", objectId = Model};
                settings.CommandColumn.NewButton.Visible = true;
                settings.CommandColumn.EditButton.Visible = true;
                settings.CommandColumn.DeleteButton.Visible = true;
                settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
                settings.CommandColumn.Width = new Unit("100px");

                if (ViewData["ReadOnly"] != null)
                    settings.Enabled = !(bool)ViewData["ReadOnly"];
                    
                settings.Columns.Add("Login", Resources.Resource.Login).SortOrder = ColumnSortOrder.Ascending;
                settings.Columns.Add(column =>
                                         {
                                             column.FieldName = "AuthenticationType";
                                             column.Caption = Resources.Resource.Type;

                                             column.ColumnType = MVCxGridViewColumnType.ComboBox;
                                             var comboBoxProperties = (ComboBoxProperties) column.PropertiesEdit;
                                             comboBoxProperties.Items.Add(new ListEditItem("Generic", 0));
                                             comboBoxProperties.Items.Add(new ListEditItem("Domain", 1));
                                         });
                settings.Columns.Add(column =>
                                         {
                                             column.FieldName = "Password";
                                             column.Caption = Resources.Resource.Password;
                                             column.SetDataItemTemplateContent("***********");
                                             column.SetEditItemTemplateContent(c => Html.DevExpress().TextBox(
                                                 edtSettings =>
                                                     {
                                                         edtSettings.Name = "Password";
                                                         edtSettings.ShowModelErrors = true;
                                                         edtSettings.Properties.Password = true;
                                                     }
                                                                                        )
                                                                                        .Bind(DataBinder.Eval(c.DataItem, "Password"))
                                                                                        .Render());
                                         });
            });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string) ViewData["EditError"]);
    }
    grid.Bind(SecurityUserController.GetCredentialForUser(Model)).GetHtml();
}