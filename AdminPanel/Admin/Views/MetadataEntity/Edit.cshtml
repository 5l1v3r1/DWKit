@using OptimaJet.Meta.Objects
@model Admin.Models.MetadataEntityModel

@{
    ViewBag.Title = Model.Id == Guid.Empty ? Resources.Resource.CreateObject : (Resources.Resource.EditObject + " " + Model.Caption);
    Html.EnableClientValidation(true);
}

<div id='result'></div>
<div class="toolbar">
    @Html.ActionLink(Resources.Resource.Back, "Index")
    @if (Model.Id != Guid.Empty)
    {
        <a class="toolbar-separator" href="#"> | </a>
        <a class="toolbar-copy" href="javascript:Copy();">@Resources.Resource.Copy</a>
        
        <script>
            function Copy() {
                if (confirm(@Resources.Resource.CopyConfirm)) {
                    $('#result').innerHTML = '';
                    var data = new Array();
                    data.push({ name: 'Id', value: '@Model.Id' });

                    $('#result').load('@Url.Action("Copy")', data,
                    function () {
                    });
                }
            }
        </script>
        
        if (Model.VersioningType != 0)
        {
            <a class="toolbar-separator" href="#"> | </a>
            <a class="toolbar-CreateUpdateVersionEntity" href="javascript:CreateUpdateVersionEntity();">@Resources.Resource.UpdateVersionTables</a>
            
            <script>
                function CreateUpdateVersionEntity(){
                    if (confirm(@Resources.Resource.UpdateVersionTableConfirm)) {
                        $('#result').innerHTML = '';

                        var data = new Array();
                        data.push({ name: 'Id', value: '@Model.Id' });

                        $('#result').load('@Url.Action("CreateUpdateVersionEntity")', data,
                        function () {
                        });
                    }
                }
            </script>
        }
    }
</div>

@using (Html.BeginForm("Edit", "MetadataEntity", FormMethod.Post))
{
    @Html.ValidationSummary(true, Resources.Resource.ErrorInFields)
    <fieldset>
        @Html.HiddenFor(model => model.Id)
        <label>@Resources.Resource.Object</label>
        <section>
            @Html.LabelFor(model => model.Caption, @<span class="required">&nbsp;</span>)
            <div>
                @Html.EditorFor(model => model.Caption)
                @Html.ValidationMessageFor(model => model.Caption)
            </div>
        </section>
        <section>
            @Html.LabelFor(model => model.IsSystem)
            <div>
                @Html.CheckBoxFor(model => model.IsSystem)
            </div>
        </section>
        <section>
            @Html.LabelFor(model => model.SchemaName, @<span class="required">&nbsp;</span>)
            <div>
                @Html.EditorFor(model => model.SchemaName)
                @Html.ValidationMessageFor(model => model.SchemaName)
            </div>
        </section>
        <section>
            @Html.LabelFor(model => model.TableName, @<span class="required">&nbsp;</span>)
            <div>
                @Html.EditorFor(model => model.TableName)
                @Html.ValidationMessageFor(model => model.TableName)
            </div>
        </section>
          <section>
            @Html.LabelFor(model => model.VersioningType)
            <div>
                  @Html.DropDownListFor(model => model.VersioningType, new SelectList(MetadataEntityHelper.GetVersioningType(), "Id", "Name"))
            </div>
        </section>
        <section>
            @Html.LabelFor(model => model.IsView)
            <div>
                @Html.CheckBoxFor(model => model.IsView) 
            </div>
        </section>

        <section>
            @Html.LabelFor(model => model.Comment)
            <div>
                @Html.TextAreaFor(model => model.Comment, new { @rows = 6 }) 
                @Html.ValidationMessageFor(model => model.Comment)
            </div>
        </section>
        <section>
            @Html.LabelFor(model => model.IsSupportsOptimisticLock)
            <div>
                @Html.CheckBoxFor(model => model.IsSupportsOptimisticLock) 
            </div>
        </section>
        <section>
            @Html.LabelFor(model => model.IsAvailableForImportExport)
            <div>
                @Html.CheckBoxFor(model => model.IsAvailableForImportExport)
            </div>
        </section>
    </fieldset>

    if (Model.Id != Guid.Empty)
    {
        @Html.Partial("Attributes", @Model.Id)
    }

    <fieldset>
        <section>
            <div>
                <button name="button" class="fr submit" value="SaveAndExit">@Resources.Resource.SaveExit</button>
                <button name="button" class="fr submit" value="Save">@Resources.Resource.Save</button>
            </div>
        </section>
    </fieldset>
}  
<div>
    @Html.ActionLink(Resources.Resource.Back, "Index")
</div>